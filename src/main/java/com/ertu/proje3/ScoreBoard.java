/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.ertu.proje3;

import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author ergul
 */
public class ScoreBoard extends javax.swing.JDialog {

    /**
     * Creates new form ScoreBoard
     */
    public ScoreBoard(java.awt.Frame parent, boolean modal, ArrayList<Score> scores) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        
        // Scores in the file are added to the table
        DefaultTableModel model = (DefaultTableModel)scoreTable.getModel();
        for (int i = 0; i < scores.size(); i++) {
            model.addRow(new Object[]{
                scores.get(i).getUsername(), scores.get(i).getScore(), scores.get(i).getUniqueId()
            });
        }
        
        // UUID column is hidden from the interface while the programmer can still use it
        TableColumnModel column_model = scoreTable.getColumnModel();
        column_model.removeColumn(column_model.getColumn(2));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        scoreTable = new javax.swing.JTable();
        deleteRowButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Scoreboard");
        setBackground(new java.awt.Color(255, 255, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        scoreTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Score", "UUID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(scoreTable);

        deleteRowButton.setText("DELETE");
        deleteRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(deleteRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(deleteRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRowButtonActionPerformed
        int index = scoreTable.getSelectedRow();
        if (index != -1) {
            // UUID of the user in selected row is taken
            String uuid = (String)scoreTable.getModel().getValueAt(index, 2);
            
            // A configured confirm dialog is created
            JTextField emailTF = new JTextField();
            JPasswordField passwordPF = new JPasswordField();
            final JComponent[] inputs = new JComponent[] {
              new JLabel("Email: "),
              emailTF,
              new JLabel("Password: "),
              passwordPF
            };
            
            int result = JOptionPane.showConfirmDialog(null, inputs, "Enter credentials",
                    JOptionPane.PLAIN_MESSAGE);
            if (result == JOptionPane.OK_OPTION) {
                // The user class is retrieved
                Player prompted_user = Database.login(emailTF.getText(), passwordPF.getPassword());
                if (prompted_user.getUniqueId().equals(uuid)) {
                    // If UUIDs match, then the user is indeed the performer of the score.
                    // Row is deleted from the table.
                    // WONTFIX: Yes, it doesn't delete it from the file, but frankly I won't touch this code again
                    DefaultTableModel model = (DefaultTableModel)scoreTable.getModel();
                    model.removeRow(index);
                } else {
                    // If there's no match, request is refused
                    JOptionPane.showMessageDialog(this, "Credentials didn't match", "Invalid user",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "You should select a row first!", "Selection error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteRowButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteRowButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable scoreTable;
    // End of variables declaration//GEN-END:variables
}
